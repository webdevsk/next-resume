@tailwind base;
@tailwind components;
@tailwind utilities;

/* DO NOT add margin/padding on the print version of the pdf. The Print-screen/puppeteer will add margin based on the @page settings for every single page */

/*Substract the expected margin twice from the initial pdf size. For A4 size its 210mm. Substracting 0.2mm for safety measures. */

/* @pdf property and values have to be raw static css. So use same margin value in both --pdf-margin and @page margin respectively. Use the variable anywhere in your project for non print mode if needed */

/* puppeteer print mode is weird regardless of headless mode. It doesn't even respect manually set viewport size in print mode. For this portrait document the viewport seems to be between 480 and 500. Point to note that it depends on pdf margin as well. */

/* Set the lowest viewport size to @media(min-width: 480px) to tackle this issue. For mobile, use initial sizes. For print, use @media(min-width: 480px). With lower margin you can have larger lowest media screen*/

/* As this project has Tailwind, you can set the lowest viewport in tailwind.config.js and use sm:property-styles as base style for printing. */

/* The css mode in puppeteer is set to screen mode. So @media print{} won't work */

/* For example */

.test {
  /* for mobile browsers */
  @apply px-4;
  /* for print and non mobile browsers */
  @apply sm:px-8;
}

/* -------------------- main css starts here -------------------- */
:root {
  --pdf-margin: 0.75in;
}

@page {
  size: A4 portrait;
  margin: 0.75in;
}

#pdf {
  max-width: calc(210mm - var(--pdf-margin) * 2);
  width: 100%;
  @apply bg-white [&_a:hover]:underline;
}

/* for non live version/non print mode */
.pdf-container {
  @apply border border-black p-4 md:p-[--pdf-margin];
}

@layer base {
  body {
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  small,
  span {
    @apply antialiased;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-bold text-theme;
  }

  p,
  small,
  span {
    @apply font-medium;
  }

  h1 {
    @apply text-3xl sm:text-4xl;
  }

  h2 {
    @apply text-xl sm:text-2xl;
  }

  h3 {
    @apply text-lg sm:text-xl;
  }

  h4 {
    @apply text-base sm:text-lg;
  }

  h5 {
    @apply text-sm sm:text-base;
  }

  h6 {
    @apply text-xs sm:text-sm;
  }

  p {
    @apply text-xs sm:text-sm;
  }

  small {
    @apply block text-xs;
  }

  span {
    @apply text-xs sm:text-sm;
  }

  li p {
    @apply cursor-text;
  }
}
